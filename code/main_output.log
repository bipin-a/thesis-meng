nohup: ignoring input
2023-07-25 01:44:41.315524: I tensorflow/core/platform/cpu_feature_guard.cc:182] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
2023-07-25 01:44:42.239686: W tensorflow/compiler/tf2tensorrt/utils/py_utils.cc:38] TF-TRT Warning: Could not find TensorRT
Reusing dataset imdb (/home/grad/baasi/.cache/huggingface/datasets/imdb/plain_text/1.0.0/2fdd8b9bcadd6e7055e742a706876ba43f19faee861df134affd7a3f60fc38a1)
imdb_test_attack_2023_07_25-01_44_44
{'path': 'imdb'}
imdb
imdb
  0%|          | 0/3 [00:00<?, ?it/s]100%|██████████| 3/3 [00:00<00:00, 599.56it/s]
Some weights of the model checkpoint at bert-base-uncased were not used when initializing BertForSequenceClassification: ['cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.dense.weight', 'cls.seq_relationship.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.predictions.decoder.weight', 'cls.predictions.transform.dense.bias', 'cls.seq_relationship.bias', 'cls.predictions.bias']
- This IS expected if you are initializing BertForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing BertForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Parameter 'function'=<function DatasetPipeline.tokenize_function at 0x7f0f7a32aca0> of the transform datasets.arrow_dataset.Dataset._map_single couldn't be hashed properly, a random hash was used instead. Make sure your transforms and parameters are serializable with pickle or dill for the dataset fingerprinting and caching to work. If you reuse this transform, the caching mechanism will consider it to be different from the previous calls and recompute everything. This warning is only showed once. Subsequent hashing failures won't be showed.
DatasetDict({
    train: Dataset({
        features: ['sentence', 'label'],
        num_rows: 25000
    })
    unsupervised: Dataset({
        features: ['sentence', 'label'],
        num_rows: 50000
    })
    validation: Dataset({
        features: ['sentence', 'label'],
        num_rows: 25000
    })
})
  0%|          | 0/25 [00:00<?, ?ba/s]  4%|▍         | 1/25 [00:00<00:06,  3.60ba/s]  8%|▊         | 2/25 [00:00<00:06,  3.78ba/s] 12%|█▏        | 3/25 [00:00<00:05,  3.77ba/s] 16%|█▌        | 4/25 [00:01<00:05,  3.81ba/s] 20%|██        | 5/25 [00:01<00:05,  3.77ba/s] 24%|██▍       | 6/25 [00:01<00:05,  3.75ba/s] 28%|██▊       | 7/25 [00:01<00:04,  3.75ba/s] 32%|███▏      | 8/25 [00:02<00:04,  3.74ba/s] 36%|███▌      | 9/25 [00:02<00:04,  3.74ba/s] 40%|████      | 10/25 [00:02<00:03,  3.77ba/s] 44%|████▍     | 11/25 [00:03<00:05,  2.73ba/s] 48%|████▊     | 12/25 [00:03<00:04,  2.95ba/s] 52%|█████▏    | 13/25 [00:03<00:03,  3.15ba/s] 56%|█████▌    | 14/25 [00:04<00:03,  3.27ba/s] 60%|██████    | 15/25 [00:04<00:02,  3.40ba/s] 64%|██████▍   | 16/25 [00:04<00:02,  3.50ba/s] 68%|██████▊   | 17/25 [00:04<00:02,  3.57ba/s] 72%|███████▏  | 18/25 [00:05<00:01,  3.62ba/s] 76%|███████▌  | 19/25 [00:05<00:01,  3.70ba/s] 80%|████████  | 20/25 [00:05<00:01,  3.77ba/s] 84%|████████▍ | 21/25 [00:05<00:01,  3.78ba/s] 88%|████████▊ | 22/25 [00:06<00:00,  3.77ba/s] 92%|█████████▏| 23/25 [00:06<00:00,  3.75ba/s] 96%|█████████▌| 24/25 [00:06<00:00,  3.71ba/s]100%|██████████| 25/25 [00:07<00:00,  3.71ba/s]100%|██████████| 25/25 [00:07<00:00,  3.57ba/s]
  0%|          | 0/50 [00:00<?, ?ba/s]  2%|▏         | 1/50 [00:00<00:12,  3.89ba/s]  4%|▍         | 2/50 [00:00<00:12,  3.86ba/s]  6%|▌         | 3/50 [00:00<00:12,  3.78ba/s]  8%|▊         | 4/50 [00:01<00:12,  3.80ba/s] 10%|█         | 5/50 [00:01<00:11,  3.78ba/s] 12%|█▏        | 6/50 [00:01<00:11,  3.81ba/s] 14%|█▍        | 7/50 [00:01<00:11,  3.78ba/s] 16%|█▌        | 8/50 [00:02<00:11,  3.76ba/s] 18%|█▊        | 9/50 [00:02<00:10,  3.76ba/s] 20%|██        | 10/50 [00:02<00:10,  3.72ba/s] 22%|██▏       | 11/50 [00:02<00:10,  3.72ba/s] 24%|██▍       | 12/50 [00:03<00:10,  3.72ba/s] 26%|██▌       | 13/50 [00:03<00:09,  3.72ba/s] 28%|██▊       | 14/50 [00:03<00:09,  3.74ba/s] 30%|███       | 15/50 [00:03<00:09,  3.76ba/s] 32%|███▏      | 16/50 [00:04<00:08,  3.78ba/s] 34%|███▍      | 17/50 [00:04<00:08,  3.80ba/s] 36%|███▌      | 18/50 [00:04<00:08,  3.79ba/s] 38%|███▊      | 19/50 [00:05<00:11,  2.76ba/s] 40%|████      | 20/50 [00:05<00:10,  2.97ba/s] 42%|████▏     | 21/50 [00:05<00:09,  3.18ba/s] 44%|████▍     | 22/50 [00:06<00:08,  3.34ba/s] 46%|████▌     | 23/50 [00:06<00:07,  3.44ba/s] 48%|████▊     | 24/50 [00:06<00:07,  3.52ba/s] 50%|█████     | 25/50 [00:06<00:07,  3.54ba/s] 52%|█████▏    | 26/50 [00:07<00:06,  3.62ba/s] 54%|█████▍    | 27/50 [00:07<00:06,  3.65ba/s] 56%|█████▌    | 28/50 [00:07<00:05,  3.73ba/s] 58%|█████▊    | 29/50 [00:08<00:05,  3.71ba/s] 60%|██████    | 30/50 [00:08<00:05,  3.74ba/s] 62%|██████▏   | 31/50 [00:08<00:05,  3.71ba/s] 64%|██████▍   | 32/50 [00:08<00:04,  3.75ba/s] 66%|██████▌   | 33/50 [00:09<00:04,  3.74ba/s] 68%|██████▊   | 34/50 [00:09<00:04,  3.74ba/s] 70%|███████   | 35/50 [00:09<00:03,  3.75ba/s] 72%|███████▏  | 36/50 [00:09<00:03,  3.73ba/s] 74%|███████▍  | 37/50 [00:10<00:03,  3.72ba/s] 76%|███████▌  | 38/50 [00:10<00:03,  3.77ba/s] 78%|███████▊  | 39/50 [00:10<00:02,  3.79ba/s] 80%|████████  | 40/50 [00:10<00:02,  3.80ba/s] 82%|████████▏ | 41/50 [00:11<00:02,  3.79ba/s] 84%|████████▍ | 42/50 [00:11<00:02,  3.79ba/s] 86%|████████▌ | 43/50 [00:11<00:01,  3.79ba/s] 88%|████████▊ | 44/50 [00:12<00:01,  3.78ba/s] 90%|█████████ | 45/50 [00:12<00:01,  3.78ba/s] 92%|█████████▏| 46/50 [00:12<00:01,  3.74ba/s] 94%|█████████▍| 47/50 [00:12<00:00,  3.72ba/s] 96%|█████████▌| 48/50 [00:13<00:00,  3.70ba/s] 98%|█████████▊| 49/50 [00:13<00:00,  3.67ba/s]100%|██████████| 50/50 [00:13<00:00,  2.74ba/s]100%|██████████| 50/50 [00:13<00:00,  3.58ba/s]
  0%|          | 0/25 [00:00<?, ?ba/s]  4%|▍         | 1/25 [00:00<00:05,  4.07ba/s]  8%|▊         | 2/25 [00:00<00:05,  3.92ba/s] 12%|█▏        | 3/25 [00:00<00:05,  3.81ba/s] 16%|█▌        | 4/25 [00:01<00:05,  3.81ba/s] 20%|██        | 5/25 [00:01<00:05,  3.81ba/s] 24%|██▍       | 6/25 [00:01<00:04,  3.81ba/s] 28%|██▊       | 7/25 [00:01<00:04,  3.80ba/s] 32%|███▏      | 8/25 [00:02<00:04,  3.74ba/s] 36%|███▌      | 9/25 [00:02<00:04,  3.73ba/s] 40%|████      | 10/25 [00:02<00:04,  3.71ba/s] 44%|████▍     | 11/25 [00:02<00:03,  3.70ba/s] 48%|████▊     | 12/25 [00:03<00:03,  3.74ba/s] 52%|█████▏    | 13/25 [00:03<00:03,  3.75ba/s] 56%|█████▌    | 14/25 [00:03<00:02,  3.74ba/s] 60%|██████    | 15/25 [00:03<00:02,  3.76ba/s] 64%|██████▍   | 16/25 [00:04<00:02,  3.76ba/s] 68%|██████▊   | 17/25 [00:04<00:02,  3.78ba/s] 72%|███████▏  | 18/25 [00:04<00:01,  3.78ba/s] 76%|███████▌  | 19/25 [00:05<00:01,  3.76ba/s] 80%|████████  | 20/25 [00:05<00:01,  3.77ba/s] 84%|████████▍ | 21/25 [00:05<00:01,  3.77ba/s] 88%|████████▊ | 22/25 [00:05<00:00,  3.71ba/s] 92%|█████████▏| 23/25 [00:06<00:00,  3.69ba/s] 96%|█████████▌| 24/25 [00:06<00:00,  3.73ba/s]100%|██████████| 25/25 [00:06<00:00,  3.77ba/s]100%|██████████| 25/25 [00:06<00:00,  3.76ba/s]
tokenized dataset: DatasetDict({
    train: Dataset({
        features: ['labels', 'input_ids', 'token_type_ids', 'attention_mask'],
        num_rows: 25000
    })
    unsupervised: Dataset({
        features: ['labels', 'input_ids', 'token_type_ids', 'attention_mask'],
        num_rows: 50000
    })
    validation: Dataset({
        features: ['labels', 'input_ids', 'token_type_ids', 'attention_mask'],
        num_rows: 25000
    })
})
######### 
device
#########
 cuda
  0%|          | 0/63 [00:00<?, ?it/s]  2%|▏         | 1/63 [00:01<01:14,  1.19s/it]  3%|▎         | 2/63 [00:01<00:52,  1.17it/s]  5%|▍         | 3/63 [00:02<00:44,  1.34it/s]  6%|▋         | 4/63 [00:03<00:40,  1.44it/s]  8%|▊         | 5/63 [00:03<00:38,  1.50it/s] 10%|▉         | 6/63 [00:04<00:36,  1.54it/s] 11%|█         | 7/63 [00:04<00:35,  1.57it/s] 13%|█▎        | 8/63 [00:05<00:34,  1.59it/s] 14%|█▍        | 9/63 [00:06<00:33,  1.60it/s] 16%|█▌        | 10/63 [00:06<00:33,  1.60it/s] 17%|█▋        | 11/63 [00:07<00:32,  1.61it/s] 19%|█▉        | 12/63 [00:07<00:31,  1.61it/s] 21%|██        | 13/63 [00:08<00:30,  1.61it/s] 22%|██▏       | 14/63 [00:09<00:30,  1.61it/s] 24%|██▍       | 15/63 [00:09<00:29,  1.62it/s] 25%|██▌       | 16/63 [00:10<00:29,  1.61it/s] 27%|██▋       | 17/63 [00:11<00:28,  1.61it/s] 29%|██▊       | 18/63 [00:11<00:27,  1.61it/s] 30%|███       | 19/63 [00:12<00:27,  1.62it/s] 32%|███▏      | 20/63 [00:12<00:26,  1.61it/s] 33%|███▎      | 21/63 [00:13<00:25,  1.62it/s] 35%|███▍      | 22/63 [00:14<00:25,  1.62it/s] 37%|███▋      | 23/63 [00:14<00:24,  1.62it/s] 38%|███▊      | 24/63 [00:15<00:24,  1.62it/s] 40%|███▉      | 25/63 [00:16<00:23,  1.62it/s] 41%|████▏     | 26/63 [00:16<00:22,  1.61it/s] 43%|████▎     | 27/63 [00:17<00:22,  1.61it/s] 44%|████▍     | 28/63 [00:17<00:21,  1.60it/s] 46%|████▌     | 29/63 [00:18<00:21,  1.60it/s] 48%|████▊     | 30/63 [00:19<00:20,  1.60it/s] 49%|████▉     | 31/63 [00:19<00:19,  1.61it/s] 51%|█████     | 32/63 [00:20<00:19,  1.60it/s] 52%|█████▏    | 33/63 [00:21<00:18,  1.61it/s] 54%|█████▍    | 34/63 [00:21<00:18,  1.60it/s] 56%|█████▌    | 35/63 [00:22<00:17,  1.60it/s] 57%|█████▋    | 36/63 [00:22<00:16,  1.61it/s] 59%|█████▊    | 37/63 [00:23<00:16,  1.61it/s] 60%|██████    | 38/63 [00:24<00:15,  1.60it/s] 62%|██████▏   | 39/63 [00:24<00:14,  1.60it/s] 63%|██████▎   | 40/63 [00:25<00:14,  1.60it/s] 65%|██████▌   | 41/63 [00:26<00:13,  1.60it/s] 67%|██████▋   | 42/63 [00:26<00:13,  1.60it/s] 68%|██████▊   | 43/63 [00:27<00:12,  1.60it/s] 70%|██████▉   | 44/63 [00:27<00:11,  1.60it/s] 71%|███████▏  | 45/63 [00:28<00:11,  1.60it/s] 73%|███████▎  | 46/63 [00:29<00:10,  1.60it/s] 75%|███████▍  | 47/63 [00:29<00:10,  1.60it/s] 76%|███████▌  | 48/63 [00:30<00:09,  1.60it/s] 78%|███████▊  | 49/63 [00:31<00:08,  1.59it/s] 79%|███████▉  | 50/63 [00:31<00:08,  1.59it/s] 81%|████████  | 51/63 [00:32<00:07,  1.59it/s] 83%|████████▎ | 52/63 [00:32<00:06,  1.59it/s] 84%|████████▍ | 53/63 [00:33<00:06,  1.59it/s] 86%|████████▌ | 54/63 [00:34<00:05,  1.59it/s] 87%|████████▋ | 55/63 [00:34<00:05,  1.59it/s] 89%|████████▉ | 56/63 [00:35<00:04,  1.59it/s] 90%|█████████ | 57/63 [00:36<00:03,  1.59it/s] 92%|█████████▏| 58/63 [00:36<00:03,  1.59it/s] 94%|█████████▎| 59/63 [00:37<00:02,  1.59it/s] 95%|█████████▌| 60/63 [00:37<00:01,  1.59it/s] 97%|█████████▋| 61/63 [00:38<00:01,  1.59it/s] 98%|█████████▊| 62/63 [00:39<00:00,  1.59it/s]100%|██████████| 63/63 [00:39<00:00,  1.60it/s]
/home/grad/baasi/myenv/lib/python3.8/site-packages/sklearn/metrics/_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))
textattack: Unknown if model of class <class 'transformers.models.bert.modeling_bert.BertForSequenceClassification'> compatible with goal function <class 'textattack.goal_functions.classification.untargeted_classification.UntargetedClassification'>.
textattack: Logging to CSV at path imdb_test_attack_2023_07_25-01_44_44/bert-base-uncased/A2TYoo2021/imdb_None.csv
Attack(
  (search_method): GreedyWordSwapWIR(
    (wir_method):  gradient
  )
  (goal_function):  UntargetedClassification
  (transformation):  WordSwapEmbedding(
    (max_candidates):  20
    (embedding):  WordEmbedding
  )
  (constraints): 
    (0): PartOfSpeech(
        (tagger_type):  nltk
        (tagset):  universal
        (allow_verb_noun_swap):  False
        (compare_against_original):  True
      )
    (1): BERT(
        (metric):  cosine
        (threshold):  0.9
        (window_size):  inf
        (skip_text_shorter_than_window):  False
        (compare_against_original):  True
      )
    (2): WordEmbeddingDistance(
        (embedding):  WordEmbedding
        (min_cos_sim):  0.8
        (cased):  False
        (include_unknown_words):  True
        (compare_against_original):  True
      )
    (3): RepeatModification
    (4): StopwordModification
    (5): InputColumnModification(
        (matching_column_labels):  ['premise', 'hypothesis']
        (columns_to_ignore):  {'premise'}
      )
    (6): MaxModificationRate(
        (max_rate):  0.1
        (min_threshold):  4
      )
  (is_black_box):  False
) 

  0%|          | 0/25000 [00:00<?, ?it/s]/home/grad/baasi/myenv/lib/python3.8/site-packages/torch/nn/modules/module.py:1344: UserWarning: Using a non-full backward hook when the forward contains multiple autograd Nodes is deprecated and will be removed in future versions. This hook will be missing some grad_input. Please use register_full_backward_hook to get the documented behavior.
  warnings.warn("Using a non-full backward hook when the forward contains multiple autograd Nodes "
  0%|          | 1/25000 [00:29<202:22:57, 29.14s/it][Succeeded / Failed / Skipped / Total] 0 / 1 / 0 / 1:   0%|          | 1/25000 [00:29<206:57:14, 29.80s/it][Succeeded / Failed / Skipped / Total] 0 / 1 / 0 / 1:   0%|          | 2/25000 [01:00<210:25:31, 30.30s/it][Succeeded / Failed / Skipped / Total] 0 / 2 / 0 / 2:   0%|          | 2/25000 [01:00<210:29:13, 30.31s/it][Succeeded / Failed / Skipped / Total] 0 / 2 / 0 / 2:   0%|          | 3/25000 [01:15<175:29:18, 25.27s/it][Succeeded / Failed / Skipped / Total] 0 / 3 / 0 / 3:   0%|          | 3/25000 [01:15<175:31:01, 25.28s/it][Succeeded / Failed / Skipped / Total] 0 / 3 / 0 / 3:   0%|          | 4/25000 [02:17<238:56:17, 34.41s/it][Succeeded / Failed / Skipped / Total] 0 / 4 / 0 / 4:   0%|          | 4/25000 [02:17<238:58:43, 34.42s/it][Succeeded / Failed / Skipped / Total] 0 / 4 / 0 / 4:   0%|          | 5/25000 [02:33<213:19:29, 30.72s/it][Succeeded / Failed / Skipped / Total] 0 / 5 / 0 / 5:   0%|          | 5/25000 [02:33<213:20:32, 30.73s/it][Succeeded / Failed / Skipped / Total] 0 / 5 / 0 / 5:   0%|          | 6/25000 [02:57<205:50:50, 29.65s/it][Succeeded / Failed / Skipped / Total] 0 / 6 / 0 / 6:   0%|          | 6/25000 [02:57<205:51:48, 29.65s/it]